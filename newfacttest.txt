structA{
};
classC{
public:
staticconstintNUM=3;enumcon{
NUM1=3
};
};
template<typenameT>
inlineintMax(constT&a,constT&b){
return(a>b?a:b);
}
constintC::NUM;intmain(){
cout<<p<<endl;Cc;
cout<<&c.NUM<<endl;cout<<C::NUM1<<endl;
inta=5,b=0;
cout<<MAX(++a,b)<<endl;cout<<MAX(++a,b+10)<<endl;a=5,b=0;
cout<<Max(++a,b)<<endl;
}
const有地址,enum与#define没有地址
1.const定义的实际是一个变量,const只限定它不能被修改,所有变量都可在程序运行时获取其地址
2.enum类型中的枚举项只是enum类型声明的一部分,它不是定义出来的变量,所以不能取地址
3.#define出来的是宏,它是预处理的东西,预处理后的编译阶段已经不存在,所以也不可能获取宏的地址
